from pathlib import Path
from typing import Dict, Set

import pandas as pd
from snakemake.utils import min_version

# require minimum snakemake version
min_version("6.10.0")


# =====================================
# Workflow config items
configfile: "config/config.yaml"


ont_samplesheet = pd.read_csv(config["ont_samplesheet"], index_col="sample")
illumina_samplesheet = pd.read_csv(config["illumina_samplesheet"])
containers: Dict[str, str] = config["containers"]
# =====================================

# =====================================
# Constants for workflow
GB = 1_024
rules_dir = Path("workflow/rules").resolve()
env_dir = Path("workflow/envs").resolve()
scripts_dir = Path("workflow/scripts").resolve()
nfs_data_dir = Path(config["nfs_data_dir"]).resolve()
fast5_dir = nfs_data_dir / "nanopore/fast5"
illumina_dir = nfs_data_dir / "illumina"
data_dir = Path("data").resolve()
GUPPY_VERSION = containers["guppy-gpu"].split(":")[-1]
rule_log_dir = Path("logs/stderr")
decontam_db = data_dir / "decontam_db"
results = Path("results").resolve()
ont_results = results / "nanopore"
SOURCES = list(set(illumina_samplesheet["source"]))
illumina_results = results / "illumina"
report_dir = results / "report"
BWA_EXTNS = [".amb", ".ann", ".bwt", ".pac", ".sa"]
# =====================================


# =====================================
# Generate the set of required output files from the pipeline
output: Set[Path] = set()
output.add(report_dir / "nanopore_composition.html")
output.add(report_dir / "nanopore_amr.html")
for src in SOURCES:
    output.add(report_dir / f"illumina_{src}_composition.html")
    output.add(report_dir / f"illumina_{src}_amr.html")
    for sample in illumina_samplesheet.query("source==@src")["sample"]:
        output.add(illumina_results / f"plots/krona/{src}/{sample}.krona.html")

for sample in ont_samplesheet.index:
    output.add(ont_results / f"plots/krona/{sample}.krona.html")
# =====================================


rule all:
    input:
        output,


include: rules_dir / "basecall.smk"
include: rules_dir / "qc.smk"
include: rules_dir / "amr.smk"
include: rules_dir / "report.smk"
